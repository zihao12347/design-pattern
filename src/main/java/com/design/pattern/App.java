package com.design.pattern;

/**
 * 设计者模式
 *      面向对象设计原则：6大
 *          1、开闭原则：
 *              对扩展放开，对修改关闭
 *          2、里氏替换原则：描述有关继承的一些原则
 *              通俗讲：子类可以扩展父类功能，但是不能改变父类原有的功能，也就是：子类在继承父类时，
 *                     可以添加新的方法，但是不要重写父类方法，
 *          3、依赖倒置：高层不依赖底层，都应该依赖抽象，抽象不依赖细节，细节应该依赖抽象，
 *               简而言之：对抽象进行编程，不进行细节编程，这样就降低客户与实现之间的耦合
 *
 *               依赖倒置原则目的是使用面向接口编程来降低类之间的耦合。
 *
 *               *抽象：指的是抽象类或接口
 *               *细节：指的是实现类
 *
 *
 *
 */
public class App {
}
